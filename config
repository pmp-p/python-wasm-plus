#!/bin/bash
export LC_ALL=C
export ROOT=$(pwd)
export SDKROOT=${SDKROOT:-$ROOT}

export PYTHONDONTWRITEBYTECODE=1
export REBUILD=${REBUILD:-false}
export CI=${CI:-false}

export PYMAJOR=3
export PYBUILD=${PYBUILD:-${PYMAJOR}.11}

export HOST_PREFIX=${HOST_PREFIX:-${SDKROOT}/devices/$(arch)/usr}
export PREFIX=${PREFIX:-${SDKROOT}/devices/emsdk/usr}
export PYTHONPYCACHEPREFIX=$(realpath ${SDKROOT}/build/pycache)


# this is python used for emsdk : ${SYS_PYTHON} -> ${EMSDK_PYTHON}
for py in 10 9 8 7
do
    if command -v python${PYMAJOR}.${py} >/dev/null
    then
        export SYS_PYTHON=$(command -v python${PYMAJOR}.${py})
        break
    else
        # sane default
        export SYS_PYTHON=$(command -v python${PYMAJOR})
    fi
done

export HPY=${HOST_PREFIX}/bin/python${PYBUILD}

if [ -f $HPY ]
then
    echo -n # host python has been built successfully
else
    export HPY=$(ls ${HOST_PREFIX}/bin/python3.?? 2>/dev/null | sort | tail -n 1)
fi

if [ -f $HPY ]
then
    export PYMINOR=$(echo $HPY|cut -d. -f2)
    export PIP=${HOST_PREFIX}/bin/pip3.${PYMINOR}
fi

# cpython build opts
export CPOPTS="-Os -g0 -fPIC"
export CPPFLAGS="-I$PREFIX/include"
export LDFLAGS="-L$PREFIX/lib"

# module build opts
export CFLDPFX="$CPPFLAGS $LDFLAGS -Wno-unused-command-line-argument"

if [ -f ${ROOT}/dev ]
then
    export COPTS="-O0 -g3 -fPIC"
    export QUIET=""
else
    export COPTS="-Os -g0 -fPIC"
    export QUIET="2>&1 > $PYTHONPYCACHEPREFIX/.log"
fi

#stable
# EMFLAVOUR=latest
#git
EMFLAVOUR=tot

export PYDK_PYTHON_HOST_PLATFORM=wasm32-$EMFLAVOUR-emscripten

if echo $LD_LIBRARY_PATH |grep -q ${HOST}/lib
then
    # config already set
    echo -n
else
    #export LD_LIBRARY_PATH="${HOST_PREFIX}/lib:$LD_LIBRARY_PATH"
    export LD_LIBRARY_PATH="${HOST_PREFIX}/lib"
fi

if [[ ! -z ${PYDK+z} ]]
then
    # config already set
    echo -n
else
    mkdir -p src
    export PKG_CONFIG_PATH="${HOST_PREFIX}/lib/pkgconfig"
    export PATH="${HOST_PREFIX}/bin:$PATH"
    export PYDK=minimal
fi

